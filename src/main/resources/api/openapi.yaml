openapi: 3.0.0

info:
  version: 2.0.0
  title: Ergo blockchain explorer

tags:
  - name: blocks
    description: Everything about blocks
  - name: transactions
    description: Everyting about transactions
  - name: addresses
    description: Everything about addresses
  - name: statistics
    description: Blockchain status information
  - name: charts
    description: Get data for charts
  - name: utilities
    description: Utilites

paths:
  /blocks:
    get:
      tags:
        - blocks
      summary: Get list of blocks
      description: Get list of blocks sorted by height
      parameters:
        - name: offset
          in: query
          description: Offset
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Sorted column
          schema:
            type: string
            enum: [height, timestamp, transactionsCount, size, miner, difficulty, minerReward]
        - name: sortDirection
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
        - name: startDate
          in: query
          description: Start Date
          schema:
            $ref: '#/components/schemas/Timestamp'
        - name: endDate
          in: query
          description: End Date
          schema:
            $ref: '#/components/schemas/Timestamp'
      operationId: listBlocks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - total
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchBlock'
                  total:
                    description: Total number of blocks
                    type: integer
                    example: 13949294
  '/blocks/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/ModifierId'
    get:
      summary: Get block by id
      tags:
        - blocks
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                properties:
                  block:
                    $ref: '#/components/schemas/FullBlock'
                  references:
                    type: object
                    properties:
                      nextId:
                        $ref: '#/components/schemas/ModifierId'
                      previousId:
                        $ref: '#/components/schemas/ModifierId'

  '/transactions':
    post:
      summary: Send an Ergo transaction
      operationId: sendTransaction
      tags:
        - transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullTransaction'
      responses:
        '200':
          description: JSON with ID of the new transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionIdResponse'

  '/transactions/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/ModifierId'
    get:
      summary: Get transction by id
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FullTransaction'

  '/transactions/unconfirmed':
    get:
      summary: Get unconfirmed transactions
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                description: Unconfirmed transactions
                type: array
                items:
                  $ref: '#/components/schemas/UnconfirmedTransaction'

  '/transactions/boxes/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/TransactionBoxId'
    get:
      summary: Get box by id
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionOutput'

  '/transactions/boxes/byAddress/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/AddressId'
    get:
      summary: Get all boxes containing given address
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionOutput'

  '/transactions/boxes/byErgoTree/{ergoTree}':
    parameters:
      - name: ergoTree
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/ErgoTree'
    get:
      summary: Get all boxes containing given ergoTree
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionOutput'

  '/transactions/boxes/byAddress/unspent/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/AddressId'
    get:
      summary: Get unspent boxes containing given address
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionOutput'

  '/transactions/boxes/byErgoTree/unspent/{ergoTree}':
    parameters:
      - name: ergoTree
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/ErgoTree'
    get:
      summary: Get unspent boxes containing given ergoTree
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionOutput'

  '/addresses/{id}':
    parameters:
      - name: id
        description: Address ID
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/AddressId'
    get:
      summary: Get address by id
      tags:
        - addresses
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FullAddress'

  '/addresses/{id}/transactions':
    parameters:
      - name: id
        description: Address ID
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/AddressId'
    get:
      summary: Get transactions related to address
      tags:
        - addresses
      parameters:
        - name: offset
          in: query
          description: Offset
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                description: Transaction objects
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  '/search':
    get:
      summary: Search block, transactions, adresses
      tags:
        - utilities
      parameters:
        - name: query
          in: query
          description: Search query
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                required:
                  - blocks
                  - transactions
                  - addresses
                properties:
                  blocks:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchBlock'
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionId'
                  adresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/AddressId'

  '/info':
    get:
      summary: Get blockchain info
      tags:
        - statistics
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainInfo'

  '/stats':
    get:
      summary: Get blockchain stats
      tags:
        - statistics
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainStats'

  '/stats/forks':
    get:
      summary: Forks info summary
      tags:
        - statistics
      parameters:
        - name: fromHeight
          in: query
          required: false
          description: Height to display forks from. Forks from last epoch are displayed by default.
          schema:
            type: integer
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ForksInfo'

  '/charts/total':
    get:
      summary: Get total sum of coins mined per day
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'

      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      description: Number of coins
                      type: integer
                      format: int32

  '/charts/blockchain-size':
    get:
      summary: The total size of all block headers and transactions per day.
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      type: integer
                      format: int32
                      description: Size in bytes
                      minimum: 0
                      example: 1030453

  '/charts/transactions-per-block':
    get:
      summary: Transactions per block per day.
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      type: integer
                      format: int32
                      description: Number of transactions
                      minimum: 0
                      example: 1030453

  '/charts/hash-rate':
    get:
      summary: Hash Rate per day.
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      type: integer
                      format: int32
                      description: Hash Rate
                      minimum: 0
                      example: 1030453

  '/charts/difficulty':
    get:
      summary: Difficulty per day.
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      type: integer
                      format: int32
                      description: Difficulty
                      minimum: 0
                      example: 1030453

  '/charts/miners-revenue':
    get:
      summary: Total value of coinbase block rewards and transaction fees paid to miners per day.
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      type: integer
                      format: int32
                      description: Reward
                      minimum: 0
                      example: 1030453

  '/charts/hash-rate-distribution':
    get:
      summary: An estimation of hashrate distribution amongst the largest mining pools
      tags:
        - charts
      responses:
        200:
          description: Ok
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      description: Miner name or address
                      type: string
                    value:
                      description: Number of blocks mined by miner
                      type: number
                      example: 103

  '/charts/block-size':
    get:
      summary: Get average block size per date
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      description: Average block size in bytes
                      type: integer
                      format: int32

components:
  schemas:
    TransactionInput:
      type: object
      required:
        - id
        - address
        - value
        - transactionId
        - outputTransactionId
        - spendingProof
      properties:
        id:
          $ref: '#/components/schemas/TransactionBoxId'
        address:
          $ref: '#/components/schemas/AddressId'
        value:
          description: Number of coins captured in input
          type: integer
          format: int32
          minimum: 0
          example: 1230044
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        outputTransactionId:
          $ref: '#/components/schemas/TransactionId'
        spendingProof:
          description: Spending proof for transaction input
          type: object
          required:
            - proofBytes
            - extension
          properties:
            proofBytes:
              $ref: '#/components/schemas/SerializedAdProof'
            extension:
              type: object
              description: Variables to be put into context

    TransactionOutput:
      type: object
      required:
        - id
        - value
        - creationHeight
        - ergoTree
        - address
        - assets
        - additionalRegisters
        - spentTransactionId
        - mainChain
      properties:
        id:
          $ref: '#/components/schemas/TransactionBoxId'
        value:
          description: Amount of Ergo token
          type: number
          minimum: 0
          example: 14.7
        creationHeight:
          description: Height the output was created at
          type: integer
          format: int32
          example: 9149
        ergoTree:
          $ref: '#/components/schemas/ErgoTree'
        address:
          $ref: '#/components/schemas/AddressId'
        assets:
          description: Assets list in the transaction
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        additionalRegisters:
          $ref: '#/components/schemas/Registers'
        spentTransactionId:
          $ref: '#/components/schemas/TransactionId'
        mainChain:
          description: Flag indication wheather box belongs to main chain
          type: boolean
          example: true

    Transaction:
      type: object
      description: Transaction without any lockers and unlockers
      required:
        - id
        - timestamp
        - confirmationCount
        - inputs
        - outputs
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        confirmationsCount:
          description: Number of confimations in transaction
          type: integer
          format: int32
          example: 142
        inputs:
          description: Many transaction inputs
          type: array
          items:
            $ref: '#/components/schemas/TransactionInput'
        outputs:
          description: Many transaction outputs
          type: array
          items:
            $ref: '#/components/schemas/TransactionOutput'

    FullBlock:
      description: Block with header and transactions
      type: object
      required:
        - header
        - blockTransactions
        - adProofs
        - extension
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        blockTransactions:
          description: Transaction objects
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        adProofs:
          $ref: '#/components/schemas/SerializedAdProof'
        extension:
          $ref: '#/components/schemas/BlockExtension'

    SearchBlock:
      description: Block for search results
      type: object
      required:
        - height
        - timestamp
        - transactionsCount
        - miner
        - minerReward
        - size
      properties:
        id:
          $ref: '#/components/schemas/ModifierId'
        height:
          type: integer
          format: int32
          minimum: 0
          example: 667
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        transactionsCount:
          type: integer
          format: int32
          minimum: 0
          example: 667
        miner:
          $ref: '#/components/schemas/Miner'
        minerReward:
          description: Miner Reward
          type: integer
          format: int32
          minimum: 0
          example: 12045
        difficulty:
          type: integer
          format: int32
          minimum: 0
          example: 123
        size:
          type: integer
          format: int32
          description: Size of block in bytes
          minimum: 0
          example: 1030453

    Miner:
      type: object
      required:
        - address
        - name
      properties:
        address:
          $ref: '#/components/schemas/AddressId'
        name:
          type: string
          example: 'BTC.com'

    BlockHeader:
      type: object
      required:
        - id
        - timestamp
        - version
        - adProofsRoot
        - stateRoot
        - transactionsRoot
        - nBits
        - extensionHash
        - powSolutions
        - height
        - difficulty
        - parentId
        - votes
      properties:
        id:
          $ref: '#/components/schemas/ModifierId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        version:
          $ref: '#/components/schemas/Version'
        adProofsRoot:
          $ref: '#/components/schemas/Digest32'
        stateRoot:
          $ref: '#/components/schemas/ADDigest'
        transactionsRoot:
          $ref: '#/components/schemas/Digest32'
        nBits:
          type: integer
          format: int64
          minimum: 0
          example: 19857408
        extensionHash:
          $ref: '#/components/schemas/Digest32'
        powSolutions:
          $ref: '#/components/schemas/PowSolutions'
        height:
          type: integer
          format: int32
          minimum: 0
          example: 667
        difficulty:
          type: integer
          format: int32
          minimum: 0
          example: 62
        parentId:
          $ref: '#/components/schemas/ModifierId'
        votes:
          $ref: '#/components/schemas/Votes'
        size:
          description: Size in bytes
          type: integer
          format: int32
        extensionId:
          $ref: '#/components/schemas/ModifierId'
        transactionsId:
          $ref: '#/components/schemas/ModifierId'
        adProofsId:
          $ref: '#/components/schemas/ModifierId'

    BlockExtension:
      type: object
      required:
        - headerId
        - digest
        - fields
      properties:
        headerId:
          $ref: '#/components/schemas/ModifierId'
        digest:
          $ref: '#/components/schemas/Digest32'
        fields:
          description: List of key-value records
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/KeyValueItem'

    KeyValueItem:
      type: array
      items:
        $ref: '#/components/schemas/HexString'

    PowSolutions:
      description: An object containing all components of pow solution
      type: object
      required:
        - pk
        - w
        - n
        - d
      properties:
        pk:
          type: string
          description: Base16-encoded public key
          example: '0350e25cee8562697d55275c96bb01b34228f9bd68fd9933f2a25ff195526864f5'
        w:
          type: string
          example: '0366ea253123dfdb8d6d9ca2cb9ea98629e8f34015b1e4ba942b1d88badfcc6a12'
        n:
          type: string
          example: '0000000000000000'
        d:
          type: integer
          example: 987654321

    SpendingProof:
      type: object
      required:
        - proofBytes
        - extension
      properties:
        proofBytes:
          type: string
          description: Base16-encoded proof bytes
          example: '2ddaaa576ccff6420b7e0557e3970e6c93fd5004189f11a50f8bb60f7f8d740c3925575e97a183728dde'
        extension:
          type: object
          description: Variables to be put into context
          additionalProperties:
            $ref: '#/components/schemas/SValue'
          example:
            '1': '0101'

    UnconfirmedTransactionInput:
      type: object
      required:
        - boxId
        - spendingProof
      properties:
        boxId:
          $ref: '#/components/schemas/TransactionBoxId'
        spendingProof:
          $ref: '#/components/schemas/SpendingProof'

    UnconfirmedTransactionOutput:
      type: object
      required:
        - boxId
        - value
        - creationHeight
        - ergoTree
        - assets
        - additionalRegisters
      properties:
        boxId:
          $ref: '#/components/schemas/TransactionBoxId'
        value:
          description: Amount of Ergo token
          type: number
          minimum: 0
          example: 14.7
        creationHeight:
          description: Height the output was created at
          type: integer
          format: int32
          example: 9149
        ergoTree:
          $ref: '#/components/schemas/ErgoTree'
        assets:
          description: Assets list in the transaction
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        additionalRegisters:
          $ref: '#/components/schemas/Registers'

    UnconfirmedTransaction:
      type: object
      required:
        - id
        - inputs
        - outputs
      properties:
        id:
          $ref: '#/components/schemas/ModifierId'
        inputs:
          description: Transaction inputs
          type: array
          items:
            $ref: '#/components/schemas/UnconfirmedTransactionInput'
        outputs:
          description: Transaction outputs
          type: array
          items:
            $ref: '#/components/schemas/UnconfirmedTransactionOutput'
        size:
          type: integer
          description: Transaction size in bytes
          example: 512

    FullTransaction:
      type: object
      required:
        - summary
        - ioSummary
        - inputs
        - outputs
      properties:
        summary:
          $ref: '#/components/schemas/TransactionSummary'
        ioSummary:
          $ref: '#/components/schemas/IOSummary'
        inputs:
          description: Many transaction inputs
          type: array
          items:
            $ref: '#/components/schemas/TransactionInput'
        outputs:
          description: Many transaction outputs
          type: array
          items:
            $ref: '#/components/schemas/TransactionOutput'

    TransactionSummary:
      type: object
      required:
        - id
        - timestamp
        - size
        - confirmationCount
        - block
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        size:
          description: Size of transcaction in bytes
          type: integer
          format: int32
          example: 43904312
        confirmationsCount:
          description: Number of confimations in transaction
          type: integer
          format: int32
          example: 142
        block:
          type: object
          properties:
            timestamp:
              $ref: '#/components/schemas/Timestamp'
            headerId:
              $ref: '#/components/schemas/ModifierId'
            height:
              description: Block height
              type: integer
              format: int32
              minimum: 0
              example: 667

    IOSummary:
      type: object
      required:
        - totalСoinsTransferred
        - totalFee
        - feePerByte
      properties:
        totalСoinsTransferred:
          description: Total Coins Transferred
          type: number
          example: 1042.23
        totalFee:
          description: Total fee
          type: number
          example: 15.43
        feePerByte:
          description: Fee per Byte
          type: number
          example: 4.21

    FullAddress:
      type: object
      required:
        - summary
        - transactions
      properties:
        summary:
          type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/AddressId'
        transactions:
          type: object
          required:
            - confirmed
          properties:
            confirmed:
              type: integer
              format: int32
              description: Total number of confirmed transactions
              example: 2341
            totalReceived:
              type: integer
              description: Total recieved coins
              example: 10455323
            confirmedBalance:
              type: integer
              description: Confirmed balance
              example: 1123
            totalBalance:
              type: integer
              description: Total balance including off-chain transactions
              example: 1123
            confirmedTokensBalance:
              type: array
              description: Confirmed tokens balance
              items:
                $ref: '#/components/schemas/Asset'
            totalTokensBalance:
              type: array
              description: Total tokens balance including off-chain transactions
              items:
                $ref: '#/components/schemas/Asset'

    ForksInfo:
      type: object
      description: Forks summary
      properties:
        quantity:
          type: integer
          example: 109
          description: Total number of forks
        forks:
          type: array
          items:
            type: object
            description: Fork info
            properties:
              length:
                type: integer
                example: 109
                description: Total number of forks
              branchPointHeight:
                type: integer
                example: 558
                nullable: true
                description: Height chain forked from
              orphaned:
                type: boolean
                description: True if fork is not linked to main chain, False otherwise
              members:
                type: array
                items:
                  type: array
                  items:
                    maxItems: 2
                    minItems: 2
                    allOf:
                      - type: integer
                        description: block height
                        example: 559
                      - type: string
                        description: block id
                        example: 'a7f1f3a83944c98359731470b1858275e5b5cefa073869354b0e2c196a5606d9'
                  description: Pair of block height and block id
                  example: [559, 'a7f1f3a83944c98359731470b1858275e5b5cefa073869354b0e2c196a5606d9']

    BlockchainInfo:
      type: object
      required:
        - version
        - supply
        - marketCap
        - transactionAverage
        - hashRate
      properties:
        version:
          type: string
          description: Software version
          example: '1.0.0'
        supply:
          type: integer
          description: Circulating supply
          example: 1000003
        transactionAverage:
          type: integer
          description: Average number of transactions in block
          example: 100302
        hashRate:
          type: integer
          format: int32
          description: Hashrate
          example: 415434144

    BlockchainStats:
      type: object
      properties:
        blockSummary:
          type: object
          properties:
            total:
              type: integer
              description: Number of mined blocks
              example: 12030
            averageMiningTime:
              type: integer
              format: int32
              example: 43201
              description: Time between blocks in ms
            totalCoins:
              type: number
              format: int32
              example: 238193891032
              description: Total mined coins
        transactionSummary:
          type: object
          properties:
            total:
              type: integer
              description: Number of transactions
            totalFee:
              type: number
              description: Total Transaction Fees
              example: 4334312000000
            totalOutput:
              type: integer
              description: Total Output Volume
              example: 430123324234
            estimatedTransactionVolume:
              type: number
              description: Estimated Transaction Volume
              example:  4301223423
        miningCost:
          type: object
          properties:
            totalMinersRevenue:
              type: number
              description: Total Miners Revenue
              example: 439023010423
            percentEarnedTransactionsFees:
              type: number
              description: Miners revenue as percentage of the transaction fees
              example: 24.54
            percentTransactionVolume:
              type: number
              description: Miners revenue as percentage of the transaction volume
              example: 2.34
            costPerTransaction:
              type: number
              description: Miners revenue divided by the number of transactions
              example: 4323000
            difficulty:
              type: number
              description: Difficulty
              example: 32340990000
            hashRate:
              type: number
              description: Hash Rate
              example: 290349095

    TransactionId:
      description: Base16-encoded transaction id bytes
      type: string
      example: 9140826f8fdb2f56816936bd6a7a72a71ac2fc5ad00b051a6c400c5cad611694

    TransactionIdResponse:
      description: Resulted transaction id
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'

    TransactionBoxId:
      description: Base16-encoded transaction box id bytes. Should be 32 bytes long
      type: string
      format: base16
      example: 1ab9da11fc216660e974842cc3b7705e62ebb9e0bf5ff78e53f9cd40abadd117

    AddressId:
      description: Base58-encoded address id bytes
      type: string
      example: 3Wvzb7aut5AurDn2BQhpHSudYznDPJztTAvqE2habtsQjXgcrD8p

    ModifierId:
      description: Base16-encoded 32 byte modifier id
      type: string
      example: 9140826f8fdb2f56816936bd6a7a72a71ac2fc5ad00b051a6c400c5cad611694

    Digest32:
      description: Base16-encoded 32 byte digest
      type: string
      example: 9140826f8fdb2f56816936bd6a7a72a71ac2fc5ad00b051a6c400c5cad611694

    ADDigest:
      description: Base16-encoded 33 byte digest - digest with extra byte with tree height
      type: string
      example: 9140826f8fdb2f56816936bd6a7a72a71ac2fc5ad00b051a6c400c5cad61169401

    SerializedAdProof:
      description: Base16-encoded ad proofs
      type: string
      example: DpvhNdDszrCDm1qmwFXmxaiz4bgEG19dGVhBaYsofV93BwmFofbnFQ7kNwnDSvptb1NGBmi6GtrFyacj8hBWNueRHVCyctAJE2sSoNxVQiSJEqRaa5NFp3DACG16RPvDDgbG8qZ1kNdfZhK9S6q77LwYhPbzYL2s2x7uzScQdccw4HR68mogEgBXomAXuisJyy4indYfCdEZmFHPELn9Md9F4SGu9BpAKYMUjEwkRKt7Ype8M6MHKFuxiVCTTq2fLC8FVUeSJLDM7BVaZtLctaeuZ3LR3sx1tog7daXTAjsXWYZXvqUVs1qynXvJZnFuAN5wLoynnN7YVahHRGQk9sUQaxtPbt7L5qzBzooXedE9LFssvU9zV3KNM2PkbpaHdAu7tJHWoTNyCzZuR2JqSfnpSDkXhZCQhRB7m7vbGzokZ7DcGwtNUxBr7HdEdEUQLRmpHbLqjL82zZuYvykUyPZwCnphaKku7RW3f3BDk3DReCeFBPZkYkoEJFHe9mCAAM5WD44vtTeNokuMrtUbvUgnUFpBnyJsQf7WHAiFsBbRjZwjgoyUYKJCSLSqp3QwoGW5sSXmGvwG9peFFB3yb6gGdDLJqTx2zTqh3znPpK9S5ePGPdCcmbnNKh1pxqnARhDB8xC7eG6Edvhwh7Nx1sSDHXo8xp3hWUdFT4APK16Wr8KNa4xEKuh9mkb31AQhCuD8GsyRaW9oGdJKtZnwrYeBWGrDQ9c99PG2yyA7JzDcvdALdH7Z7T4pd57KFn4VTdJrT6tqwJPh3wERgQFUUEQ2grpxBg8ZMZy1YEzLu1MnJJVvvx66efK1GPytK4n1hKs3pogMW2Fxi5zbLean7k9Fj6VGcbFKGbJPqzhTr3TW6ywNsBmh7ntSmrV3k45RxWb4KWJByiy25xkQg57qyij71F2vzZgTs3kRVVMS4asE8r3qLiA4w8QKfay7JWC9XVuRJQwMPPeVNRfJP7kK1giZhZahzbCFKLcuP6ShzxBzZmTzhRGuF3HtsbtWawv21czEANc6cV6ymyrics3jtMizGwwAcUcasToNuBih34HhspF65HnR5gKZqqHwkbugeDCpDYieAQzwTLzd52ocdJp98dvHU1SWAGdKaeqhF75FiijZebKb3mQiPMTFj2PMwSTjttarPwpEdEwRLxGPezvCUdq7rJAoZJbszaCBnTDjHjqsv5UiyLXr7gM9uyzMX9GMwTnrWYrEwYAD2Yih4b9mvtMdDeZ1mfJsT9r47xLPqgyxbd232U8pu28JbUrrfpZ2mZARTsXzYsuFQusnbzCo72PWNUvceTXh5f5TFhMbmCydcrfCyM3JFV2FrxwNKFKdFvdppAGXGKwhk5cB4

    Timestamp:
      description: Date in milliseconds
      type: integer
      format: int32
      example: 1527172305

    Timespan:
      description: Timespan for charts
      type: string
      enum: ['all', '7days', '30days', '60days', '180days', '1year', '2years']

    SValue:
      description: Base-16 encoded serialized Sigma-state value
      type: string
      format: base16
      example: '0101'

    HexString:
      description: Base16-encoded bytes
      type: string
      format: base16
      example: '4ab9da11fc216660e974842cc3b7705e62ebb9e0bf5ff78e53f9cd40abadd117'

    Asset:
      description: Token detail in the transaction
      type: object
      required:
        - tokenId
        - amount
      properties:
        tokenId:
          $ref: '#/components/schemas/Digest32'
        amount:
          description: Amount of the token
          type: integer
          format: int64
          example: 1000

    Registers:
      description: Ergo box registers
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SValue'
      example:
        R4: '0101'

    ErgoTree:
      description: Base16-encoded ergo tree bytes
      type: string
      format: base16
      example: '0101'

    Version:
      description: Ergo blockchain protocol version
      type: integer
      format: int8
      example: 2

    Votes:
      description: Votes for a soft-fork and parameters
      type: array
      items:
        type: integer
        format: uint8
      example: [0, 0, 0]